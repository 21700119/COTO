<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="problem">

	<insert id="createProblem" parameterType="com.walab.coding.model.ProblemDTO">
 		INSERT INTO problem (siteID, name, link) VALUES (#{siteID}, #{name}, #{link})
	</insert>
	
	<select id="readProblem" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT problem.id, userProblem.problemID, COUNT(*) as count, problem.name, problem.link, problem.siteID, codingSite.siteName, codingSite.siteUrl, problem.regdate 
		FROM ((problem
		INNER JOIN codingSite ON problem.siteID = codingSite.id)
		INNER JOIN userProblem ON problem.id = userProblem.problemID) GROUP BY problem.id ORDER BY count DESC;
	</select>	
	
	<select id="searchProblemList" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT problem.id, userProblem.problemID, COUNT(*) as count, problem.name, problem.link, problem.siteID, codingSite.siteName, codingSite.siteUrl, problem.regdate 
		FROM ((problem
		INNER JOIN codingSite ON problem.siteID = codingSite.id)
		INNER JOIN userProblem ON problem.id = userProblem.problemID) 
		where problem.name like #{searchValue} 
		<if test="siteValue!=null and !siteValue.equals('')">
			and problem.siteID=#{siteValue}
		</if>
		GROUP BY problem.id 
		order by #{orderValue}
		<if test="siteValue!=null and !siteValue.equals('')">
			, #{siteValue}
		</if>
	</select>
	
	<select id="readProblembyID" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT * FROM YeeunJ.problem where siteID=${siteID} and strcmp(lower(name), lower(${problem})) = 0;
	</select>
	
	<select id="readProblemByUser" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT * FROM problem WHERE siteID=#{siteID} AND name=#{name} AND link=#{link}
	</select>
	
	<select id="readProblemByPage" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT problem.id, userProblem.problemID, COUNT(*) as count, problem.name, problem.link, problem.siteID, codingSite.siteName, codingSite.siteUrl, problem.regdate 
		FROM ((problem
		INNER JOIN codingSite ON problem.siteID = codingSite.id)
		INNER JOIN userProblem ON problem.id = userProblem.problemID) 
		GROUP BY problem.id
		ORDER BY count DESC LIMIT #{s_point}, #{list}
	</select>	
		
	<select id="readProblemCnt" resultType="int">
		SELECT COUNT(*) as listCnt FROM problem
	</select>
	
	<select id="readRecentProblem" resultType="com.walab.coding.model.ProblemDTO" parameterType="hashmap">
		SELECT problem.name, problem.siteID, codingSite.siteName
		FROM problem
		INNER JOIN codingSite ON problem.siteID = codingSite.id
		ORDER BY problem.regdate DESC
		LIMIT 0, 4;
	</select>
	
	<resultMap type="HashMap" id="ratioBySite">
		<id column="siteID" property="siteID"/>
		<id column="ratio" property="ratio"/>
	</resultMap>
	
	<select id="readRatioBySiteid" parameterType="hashmap" resultMap="ratioBySite">
		SELECT siteID, COUNT(*)/#{ count } AS ratio FROM problem GROUP BY siteID
	</select>

	
	
</mapper>