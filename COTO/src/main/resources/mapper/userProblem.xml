<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userProblem">
	<select id="readUserProblemList" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		select up.id, p.name as problem, p.link as link, c.siteName as site, c.siteUrl as siteUrl, up.difficulty as difficulty, up.memo as memo, up.regdate as regdate from userProblem as up 
		join problem as p on up.userID=p.id 
		join codingSite as c on p.siteID=c.id 
		where userID=#{userID}
	</select>
	<select id="searchUserProblemByContent" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		select up.id, p.name as problem, p.link as link, c.siteName as site, c.siteUrl as siteUrl, up.difficulty as difficulty, up.memo as memo, up.regdate as regdate from userProblem as up 
		join problem as p on up.userID=p.id 
		join codingSite as c on p.siteID=c.id 
		where userID=#{userID} and (p.name like #{content1} or up.memo like #{content2})
	</select>
	<select id="searchProblemOrderByCount" resultType="com.walab.coding.model.UserProblemDTO">
		select cs.siteName as site, problem.name as problem 
		from (SELECT problemID, count(*) FROM userProblem group by problemID order by count(*) desc limit 4) as pID
		join problem on pID.problemID=problem.id
		join codingSite as cs on problem.siteID = cs.id;
	</select>
	
	<delete id="deleteUserProblem" parameterType="hashmap">
		delete from userProblem where id = #{problemID}
	</delete>
	
	<update id="updateUserProblem" parameterType="hashmap">
		update userProblem set difficulty='${difficulty}', memo='${memo}' where id = #{problemID}
	</update>
	
	<select id="readSovledUserProblem" resultType="int" parameterType="hashmap">
		SELECT count(A.userID) as solved 
		FROM userProblem as A, (SELECT startDate FROM goal WHERE userID=1 ORDER BY DATE(startDate) DESC limit 1) subquery 
		WHERE A.regDate >= subquery.startDate and A.userID = #{userID}
	</select>
	<select id = "readRank" resultType="com.walab.coding.model.RankDTO">
		SELECT (select nickName from user where A.userID = id) as nickName, count(userID) as cnt FROM `userProblem` as A group by userID order by count(userID) desc limit 0,4	
 	</select>
 
 	<insert id="createUserProblem" parameterType="com.walab.coding.model.UserProblemDTO">
 		INSERT INTO userProblem (userID, problemID) VALUES (#{userID}, #{problemID})
<!-- 		INSERT INTO userProblem  (userID, siteID, problem, link, difficulty, memo) VALUES (#{userID}, #{siteID}, #{problem}, #{link}, #{difficulty}, #{memo})-->	
	</insert>
	
</mapper>