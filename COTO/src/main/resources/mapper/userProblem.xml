<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userProblem">
	<select id="readUserProblemList" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		select subquery.id, subquery.problemID, subquery.difficulty as difficulty, subquery.memo as memo, subquery.regdate as regdate,
	   		   p.name as problem, p.link as link, p.siteID,
	   		   c.siteName as site, c.siteUrl as siteUrl 
		from (select up.id as id, up.problemID as problemID,
       		  up.difficulty as difficulty, up.memo as memo, up.regdate as regdate 
	   		  from YeeunJ.userProblem as up where up.userID=#{userID}) as subquery 
		join YeeunJ.problem as p on subquery.problemID=p.id 
		join YeeunJ.codingSite as c on p.siteID=c.id ;
	</select>
	
	<select id="searchUserProblemByContent" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		select up.id, p.name as problem, p.link as link, c.siteName as site, c.siteUrl as siteUrl, up.difficulty as difficulty, up.memo as memo, up.regdate as regdate from userProblem as up 
		join problem as p on up.userID=p.id 
		join codingSite as c on p.siteID=c.id 
		where userID=#{userID} and (p.name like #{content1} or up.memo like #{content2})
	</select>
	
	<select id="searchProblemOrderByCount" resultType="com.walab.coding.model.UserProblemDTO">
		select cs.siteName as site, problem.name as problem 
		from (SELECT problemID, count(*) FROM userProblem group by problemID order by count(*) desc limit 4) as pID
		join problem on pID.problemID=problem.id
		join codingSite as cs on problem.siteID = cs.id;
	</select>
	
	<delete id="deleteUserProblem" parameterType="hashmap">
		delete from userProblem where id = #{problemID}
	</delete>
	
	<update id="updateUserProblem" parameterType="hashmap">
		update userProblem set difficulty='${difficulty}', memo='${memo}' where id = #{problemID}
	</update>
	
	<select id="readSovledUserProblem" resultType="int" parameterType="hashmap">
		SELECT count(A.userID) as solved 
		FROM userProblem as A, (SELECT startDate FROM goal WHERE userID=#{userID} ORDER BY DATE(startDate) DESC limit 1) subquery 
		WHERE A.regDate >= subquery.startDate and A.userID = #{userID}
	</select>
	
	<select id = "readRank" resultType="com.walab.coding.model.RankDTO">
		SELECT (select nickName from user where A.userID = id) as nickName, count(userID) as cnt FROM `userProblem` as A group by userID order by count(userID) desc limit 0,4	
 	</select>
 
 	<insert id="createUserProblem" parameterType="com.walab.coding.model.UserProblemDTO">
 		INSERT INTO userProblem (userID, problemID) VALUES (#{userID}, #{problemID})
<!-- 		INSERT INTO userProblem  (userID, siteID, problem, link, difficulty, memo) VALUES (#{userID}, #{siteID}, #{problem}, #{link}, #{difficulty}, #{memo})-->	
	</insert>
	
	<select id="countUserProblemEachDay" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		SELECT count(A.userID) as countSolvedP, date_format(A.regdate,'%Y-%m-%d') as regDate From YeeunJ.userProblem as A, 
		(SELECT startdate, enddate FROM YeeunJ.goal WHERE userID=#{userID} order by Date(startdate) Desc limit 1) as B 
		WHERE A.userID = #{userID} and 
		<![CDATA[date_format(A.regdate,'%Y-%m-%d') >= date_format(B.startdate,'%Y-%m-%d') and date_format(A.regdate,'%Y-%m-%d') <= date_format(B.enddate,'%Y-%m-%d')]]>
		group by date_format(A.regdate,'%Y-%m-%d')
	</select>
	
	<select id="readProblemActivities" resultType="com.walab.coding.model.UserProblemDTO" parameterType="hashmap">
		select subquery.id, subquery.problemID, subquery.difficulty as difficulty, subquery.memo as memo, subquery.regdate as regdate, 
	   		   p.name as problem, p.link as link, <!-- p.siteID, -->
	   		   c.siteName as site, c.siteUrl as siteUrl
		from (select up.id as id, up.problemID as problemID, up.difficulty as difficulty, up.memo as memo, up.regdate as regdate 
			  from YeeunJ.userProblem as up
			  join YeeunJ.goal as g on up.userID=g.userID
			  where up.userID=#{userID} and g.id=#{goalID} and
			  <![CDATA[date_format(up.regdate,'%Y-%m-%d') >= date_format(g.startdate,'%Y-%m-%d') and date_format(up.regdate,'%Y-%m-%d') <= date_format(g.enddate,'%Y-%m-%d']]>)) as subquery 
		join YeeunJ.problem as p on subquery.problemID=p.id
		join YeeunJ.codingSite as c on p.siteID=c.id;
	</select>
</mapper>